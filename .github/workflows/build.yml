name: Build Android APK

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install system dependencies
        run: |
          echo "📦 Installing system deps..."
          sudo apt-get update -y
          sudo apt-get install -y \
            git zip unzip openjdk-17-jdk \
            python3-pip python3-setuptools python3-wheel \
            libffi-dev libssl-dev libsqlite3-dev zlib1g-dev \
            pkg-config libgl1-mesa-dev libgles2-mesa-dev \
            build-essential \
            libjpeg-dev libpng-dev libfreetype6-dev \
            libsndfile1 libavcodec-dev libavformat-dev libswscale-dev

      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          pip install buildozer cython virtualenv

      - name: Install Android SDK
        run: |
          echo "📥 Downloading Android SDK tools..."
          mkdir -p $HOME/android-sdk/cmdline-tools
          cd $HOME/android-sdk/cmdline-tools
          curl -fo sdk.zip https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
          unzip sdk.zip -d latest
          rm sdk.zip

          # Move files so sdkmanager exists in bin
          mv latest/cmdline-tools/* latest/ || true
          rm -rf latest/cmdline-tools || true

          export PATH=$HOME/android-sdk/cmdline-tools/latest/bin:$PATH
          echo "✅ sdkmanager path:" $(which sdkmanager || echo "NOT FOUND")

          if ! command -v sdkmanager >/dev/null; then
            echo "❌ sdkmanager not found after extraction"
            ls -R $HOME/android-sdk/cmdline-tools/latest || true
            exit 1
          fi

      - name: Accept Licenses & Install Build-Tools
        run: |
          export PATH=$HOME/android-sdk/cmdline-tools/latest/bin:$PATH
          yes | sdkmanager --licenses || true
          yes | sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.2" "ndk;25.2.9519653"

      - name: Build APK
        working-directory: robot-trading
        run: |
          echo "🚀 Starting build..."
          set -o pipefail
          buildozer -v android debug 2>&1 | tee build_log.txt

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: robot-trading-apk
          path: robot-trading/bin/*.apk

      - name: Upload Build Log (if failed)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-log
          path: robot-trading/build_log.txt
