name: Build APK

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-pip git zip unzip openjdk-17-jdk \
          libncurses6 libtinfo6 libffi-dev libssl-dev
        pip install --upgrade pip
        pip install buildozer cython

    - name: Install Android SDK & accept licenses
      run: |
        mkdir -p $HOME/android-sdk/cmdline-tools
        cd $HOME/android-sdk/cmdline-tools
        curl -o sdk-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
        unzip sdk-tools.zip
        mkdir -p latest
        mv cmdline-tools/* latest/
        rm -rf cmdline-tools
        yes | $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --licenses
        yes | $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager \
          "platform-tools" "platforms;android-33" "build-tools;33.0.2"

    - name: Ensure buildozer.spec exists
      run: |
        cd robot-trading
        if [ ! -f buildozer.spec ]; then
          buildozer init
        fi

    - name: Build APK with Buildozer
      working-directory: ./robot-trading
      run: |
        export ANDROIDSDK=$HOME/android-sdk
        export PATH=$PATH:$ANDROIDSDK/cmdline-tools/latest/bin:$ANDROIDSDK/platform-tools
        buildozer -v android debug

    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: robot-trading/bin/*.apk
